from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException
import time

# WebDriverのパスを設定
driver_path = 'C:\\Users\\yukik\\Desktop\\chromedriver.exe'  # 正しいパスに変更

# サービスオブジェクトを作成
service = Service(driver_path)

# オプションを設定して、ヘッドレスモードで実行（ブラウザを表示したい場合はこの行をコメントアウト）
chrome_options = Options()
# chrome_options.add_argument('--headless')  # コメントアウトしてブラウザを表示

# WebDriverを起動
driver = webdriver.Chrome(service=service, options=chrome_options)

# ターゲットページを開く
url = "https://suumo.jp/jj/chintai/kensaku/FR301FB004/?ar=010&bs=040&ra=001&rn=4000&srch_navi=1"
driver.get(url)

# WebDriverWaitを使用してページが完全に読み込まれるのを待つ
wait = WebDriverWait(driver, 60)  # タイムアウトを60秒に設定

# スクロールして全要素を読み込む
def scroll_to_load_elements():
    last_height = driver.execute_script("return document.body.scrollHeight")
    while True:
        driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
        time.sleep(2)  # ページの読み込みを待つ
        new_height = driver.execute_script("return document.body.scrollHeight")
        if new_height == last_height:
            break
        last_height = new_height

scroll_to_load_elements()

# ステップ1: 駅名を入力
search_station = input("選択する駅名を入力してください: ").strip()

# 駅名リンクをクリック
try:
    station_link = wait.until(EC.element_to_be_clickable((By.LINK_TEXT, search_station)))
    driver.execute_script("arguments[0].click();", station_link)
    print(f"'{search_station}' のリンクをJavaScriptでクリックしました。")
except TimeoutException:
    print(f"エラー: 駅名 '{search_station}' のリンクが見つかりませんでした。")
    driver.quit()
    exit()

# ステップ2: 間取りタイプを取得してチェックする
# 間取りタイプのXPathマッピング
layout_xpath_map = {
    "ワンルーム": '//*[@id="md0"]',
    "1K": '//*[@id="md1"]',
    "1DK": '//*[@id="md2"]',
    "1LDK": '//*[@id="md3"]',
    "2K": '//*[@id="md4"]',
    "2DK": '//*[@id="md5"]',
    "2LDK": '//*[@id="md6"]',
    "3K": '//*[@id="md7"]',
    "3DK": '//*[@id="md8"]',
    "3LDK": '//*[@id="md9"]',
    "4K": '//*[@id="md10"]',
    "4DK": '//*[@id="md11"]',
    "4LDK": '//*[@id="md12"]',
    "5K以上": '//*[@id="md13"]'
}

# ユーザーに希望する間取りタイプを入力してもらう
print("選択できる間取りのタイプ:")
for layout in layout_xpath_map.keys():
    print(f"- {layout}")

selected_layouts = input("希望する間取りのタイプを入力してください（複数の場合はスペース区切りで入力）：").strip()

if selected_layouts.lower() != "ない":  # 'ない' と入力された場合はスキップ
    selected_layouts = [layout.strip() for layout in selected_layouts.split(' ') if layout.strip()]
    
    # 各間取りタイプに対応するチェックボックスを選択
    for layout in selected_layouts:
        if layout in layout_xpath_map:
            xpath = layout_xpath_map[layout]
            try:
                checkbox = wait.until(EC.element_to_be_clickable((By.XPATH, xpath)))
                checkbox.click()
                print(f"'{layout}' のチェックボックスを選択しました。")
            except TimeoutException:
                print(f"エラー: 間取りタイプ '{layout}' のチェックボックスが見つかりませんでした。")
            except NoSuchElementException:
                print(f"エラー: 間取りタイプ '{layout}' のチェックボックスが見つかりませんでした。")
        else:
            print(f"間取りタイプ '{layout}' は無効です。正しい間取りタイプを入力してください。")
else:
    print("間取りの選択はスキップされました。")

# ステップ3: ＜この条件で検索する＞ボタンをクリックして絞り込み
try:
    search_button_xpath = '//*[@id="js-searchPanel"]/div[2]/div[2]/form/div[3]/button'  # 実際のページのXPathに合わせて調整
    search_button = wait.until(EC.element_to_be_clickable((By.XPATH, search_button_xpath)))
    driver.execute_script("arguments[0].click();", search_button)
    print("＜この条件で検索する＞ボタンをクリックしました。")
except TimeoutException:
    print("検索ボタンが見つかりませんでした。")
except NoSuchElementException:
    print("検索ボタンの要素が見つかりませんでした。")

# 最終的な遷移先のURLを出力
final_url = driver.current_url
print(f"最終画面遷移先のURL: {final_url}")

# ユーザーが確認できるように、プログラムを停止せずに待機
input("終了するにはEnterキーを押してください...")

# ブラウザを閉じる
driver.quit()
