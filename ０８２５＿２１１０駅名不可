from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
import time

# WebDriverのパスを設定
driver_path = 'C:\\Users\\yukik\\Desktop\\chromedriver.exe'  # 正しいパスに変更

# サービスオブジェクトを作成
service = Service(driver_path)

# オプションを設定して、ヘッドレスモードで実行（ブラウザを表示したい場合はこの行をコメントアウト）
chrome_options = Options()
# chrome_options.add_argument('--headless')  # コメントアウトしてブラウザを表示

# WebDriverを起動
driver = webdriver.Chrome(service=service, options=chrome_options)

# ターゲットページを開く
url = "https://suumo.jp/chintai/hokkaido_/ensen/"  # 例としてSuumoのページを使用
driver.get(url)

# WebDriverWaitを使用してページが完全に読み込まれるのを待つ
wait = WebDriverWait(driver, 60)  # タイムアウトを60秒に設定

# ステップ1: 路線を選ぶ
search_route = input("選択する沿線名を入力してください: ")

# スクロールして全要素を読み込む
def scroll_to_load_elements():
    last_height = driver.execute_script("return document.body.scrollHeight")
    while True:
        driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
        time.sleep(2)  # ページの読み込みを待つ
        new_height = driver.execute_script("return document.body.scrollHeight")
        if new_height == last_height:
            break
        last_height = new_height

scroll_to_load_elements()

# 沿線名をチェック
route_checkboxes = driver.find_elements(By.XPATH, '//*[@id="js-gotoEkiForm"]/div[1]/table/tbody/tr/td/div/ul/li')
for checkbox in route_checkboxes:
    label = checkbox.text
    checkbox_element = checkbox.find_element(By.XPATH, './/input[@type="checkbox"]')
    
    # ラベルと対応するチェックボックスの状態をデバッグプリント
    print(f"チェックボックスのラベル: {label}")
    print(f"チェックボックスの状態: {'チェック済み' if checkbox_element.is_selected() else '未チェック'}")
    
    if search_route in label:
        # チェックボックスをクリック
        driver.execute_script("arguments[0].click();", checkbox_element)
        
        # クリック後の状態をデバッグプリント
        print(f"'{label}' にチェックを入れました。")
        print(f"チェックボックスの状態（クリック後）: {'チェック済み' if checkbox_element.is_selected() else '未チェック'}")
        
        # 現在のURLをデバッグプリント
        current_url = driver.current_url
        print(f"クリック後の現在のURL: {current_url}")
        break  # 目的のチェックボックスが見つかったらループを抜ける

# 「チェックした沿線の駅を絞り込む」ボタンをクリック
button_xpath = "//*[contains(text(), 'チェックした沿線の駅を絞り込む')]"
button = wait.until(EC.element_to_be_clickable((By.XPATH, button_xpath)))
driver.execute_script("arguments[0].click();", button)
print("「チェックした沿線の駅を絞り込む」ボタンをクリックしました。")

# ページ遷移を待機（次のページの特定の要素が表示されるまで待機）
try:
    # 遷移先のページが完全に読み込まれるのを待つ
    wait.until(EC.presence_of_element_located((By.XPATH, '//div[contains(@class, "c-table")]/table/tbody/tr')))
    print("次のページの読み込みが完了しました。")
except TimeoutException:
    print("ページ遷移に時間がかかりすぎています。処理を終了します。")
    driver.quit()
    exit()

# 最終的な遷移先のURLを出力
final_url = driver.current_url
print(f"最終画面遷移先のURL: {final_url}")

# ブラウザを閉じる
driver.quit()
